server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      
spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/security?characterEncoding=UTF-8
    username: root
    password: 1234

  jpa:
    hibernate:
      ddl-auto: create #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    
  security:
    oauth2:
      client:
        registration:
          google:   # /oauth2/authorization/google 이 주소를 동작하게 한다.
           client-id: 890384539494-rb8eaojhocod2o6usbt09gsqh4a9tt6v.apps.googleusercontent.com
           client-secret: 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
           scope:
           - email
           - profile
           
          naver:
           client-id: uCoS8KzKduaXBhiQWA35
           client-secret: QO_zFeyOfy
           scope:
            - name
            - email
           client-name: Naver
           authorization-grant-type: authorization_code
           # OAauth2를 사용하는 방식
           redirect-uri: http://localhost:8080/login/oauth2/code/naver
           # callback주소는 http://localhost:8080/login/oauth2/code/까지는 고정
           # 원래는 provider가 제공이 안된 사이트는 고정이 아니지만 그냥 편하게.. 고정하자.
           
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
            # naver가 return 하는것
            # response = { resultCode, message, response = {id, email, name} 이렇게 response안에 response를 리턴함. }